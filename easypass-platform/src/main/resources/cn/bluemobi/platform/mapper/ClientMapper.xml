<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bluemobi.platform.mapper.ClientMapper">
	<select id="findClients" resultType="Map">
	select 
	ct.id ,
    ct.client_name as clientName,
    ct.role ,
    ct.phone ,
    ct.province ,
    ct.province_code as provinceCode,
    ct.city ,
    ct.city_code as cityCode,
    ct.district ,
    ct.district_code as districtCode,
    ct.address ,
    ct.create_by as createBy,
    ct.create_tm as createTm,
    ct.modify_by as modifyBy,
    ct.modify_tm as modifyTm,
    ct.has_pic as hasPic,
    ct.idcard_no as idcardNo,
    ct.fontside_pic as fontsidePic,
    ct.backside_pic as backsidePic
    from client_template ct
    where 1=1 
    <if test="clientName != null and clientName != ''">
    and ct.client_name like concat('%',#{clientName},'%')
    </if>
    <if test="role != null and role != ''">
    and ct.role = #{role}
    </if>
    <if test="phone != null and phone != ''">
    and ct.phone like concat('%',#{phone},'%')
    </if>
    order by ct.create_tm desc
	</select>
	
	<select id="exists" resultType="int">
	select count(1) from client_template where role = #{role} and client_name = #{clientName} and phone = #{phone}
	</select>
	<select id="exists2" resultType="int">
	select count(1) from client_template where role = #{role} and client_name = #{clientName} and phone = #{phone} and id &lt;&gt; #{id}
	</select>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
	insert into client_template (
	client_name ,
    role ,
    phone ,
    province,
    province_code ,
    city ,
    city_code ,
    district ,
    district_code ,
    address ,
    create_by ,
    create_tm
	) values (
	#{clientName,jdbcType=VARCHAR},
	#{role,jdbcType=VARCHAR},
	#{phone,jdbcType=VARCHAR},
	#{province,jdbcType=VARCHAR},
	#{provinceCode,jdbcType=VARCHAR},
	#{city,jdbcType=VARCHAR},
	#{cityCode,jdbcType=VARCHAR},
	#{district,jdbcType=VARCHAR},
	#{districtCode,jdbcType=VARCHAR},
	#{address,jdbcType=VARCHAR},
	#{createBy},
	now()
	)
	</insert>
	
	<update id="update">
	update client_template set 
	client_name = #{clientName,jdbcType=VARCHAR},
    phone = #{phone,jdbcType=VARCHAR},
    province = #{province,jdbcType=VARCHAR},
    province_code = #{provinceCode,jdbcType=VARCHAR},
    city = #{city,jdbcType=VARCHAR},
    city_code = #{cityCode,jdbcType=VARCHAR},
    district = #{district,jdbcType=VARCHAR},
    district_code = #{districtCode,jdbcType=VARCHAR},
    address = #{address,jdbcType=VARCHAR},
    modify_by = #{modifyBy},
    modify_tm = now()
	where id = #{id}
	</update>
	
	<update id="deleteById">
	delete from client_template where id = #{0}
	</update>
	
	<select id="findSendersForSelect2" resultType="Map">
	select 
	ct.id ,
    ct.client_name as clientName,
    ct.role ,
    ct.phone ,
    ct.province ,
    ct.province_code as provinceCode,
    ct.city ,
    ct.city_code as cityCode,
    ct.district ,
    ct.district_code as districtCode,
    ct.address 
    from client_template ct
    where ct.client_name like concat('%',#{0},'%')
    and ct.role = 'sender'
    limit 0,15
	</select>
	
	<select id="findReceiverForSelect2" resultType="Map">
	select 
	ct.id ,
    ct.client_name as clientName,
    ct.role ,
    ct.phone ,
    ct.province ,
    ct.province_code as provinceCode,
    ct.city ,
    ct.city_code as cityCode,
    ct.district ,
    ct.district_code as districtCode,
    ct.address 
    from client_template ct
    where ct.client_name like concat('%',#{0},'%')
    and ct.role = 'receiver'
    limit 0,15
	</select>
	
	<select id="findById" resultType="Map">
	select 
	ct.id ,
    ct.client_name as clientName,
    ct.role ,
    ct.phone ,
    ct.province ,
    ct.province_code as provinceCode,
    ct.city ,
    ct.city_code as cityCode,
    ct.district ,
    ct.district_code as districtCode,
    ct.address 
    from client_template ct
    where ct.id = #{0}
	</select>
	
	<select id="findReceiverByNameAndPhone" resultType="Client">
	select 
	ct.id ,
    ct.client_name as clientName,
    ct.role ,
    ct.phone ,
    ct.province ,
    ct.province_code as provinceCode,
    ct.city ,
    ct.city_code as cityCode,
    ct.district ,
    ct.district_code as districtCode,
    ct.address,
    ct.has_pic as hasPic,
    ct.idcard_no as idcardNo,
    ct.fontside_pic fontsidePic,
    ct.backside_pic backsidePic,
    ct.mergeside_pic as mergesidePic
    from client_template ct
    where ct.role = 'receiver'
    and ct.client_name = #{receiverName,jdbcType=VARCHAR} and ct.phone = #{receiverPhone,jdbcType=VARCHAR}
	</select>
	
	
	<select id="findReceiverForCheat" resultType="Client">
	select 
	ct.id ,
    ct.client_name as clientName,
    ct.role ,
    ct.phone ,
    ct.province ,
    ct.province_code as provinceCode,
    ct.city ,
    ct.city_code as cityCode,
    ct.district ,
    ct.district_code as districtCode,
    ct.address,
    ct.has_pic as hasPic,
    ct.idcard_no as idcardNo,
    ct.fontside_pic fontsidePic,
    ct.backside_pic backsidePic,
    ct.mergeside_pic as mergesidePic
    from client_template ct
    where ct.role = 'receiver'
    and ct.has_pic = '1'
    and ct.client_name not in (
    	SELECT 
		CASE om.has_pic 
			WHEN '0' THEN om.receiver_name 
			WHEN '1' THEN om.receiver_name 
			WHEN '2' THEN om.fake_receiver_name 
		END AS samename
		FROM order_main om WHERE om.pallet_id = #{0})
		
	limit 0,2
	</select>
</mapper>